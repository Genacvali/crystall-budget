#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è CrystalBudget.
–ö–æ–º–∞–Ω–¥—ã: init-db, migrate, seed, run
"""

import os
import sys
import sqlite3
from datetime import datetime


def init_db():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö."""
    print("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    from app import create_app
    
    app = create_app()
    with app.app_context():
        from app.db import init_db
        init_db()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")


def migrate():
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏."""
    print("üîÑ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π...")
    os.system("python3 migrate_to_modular.py")


def seed():
    """–ó–∞–ø–æ–ª–Ω–∏—Ç—å –ë–î —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏."""
    print("üîÑ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...")
    
    db_path = os.environ.get("BUDGET_DB", "budget.db")
    conn = sqlite3.connect(db_path)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    cursor = conn.execute("SELECT COUNT(*) FROM users")
    if cursor.fetchone()[0] > 0:
        print("‚ÑπÔ∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º seed")
        return
    
    from werkzeug.security import generate_password_hash
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    conn.execute("""
    INSERT INTO users (name, email, password_hash, default_currency, theme) 
    VALUES (?, ?, ?, ?, ?)
    """, ("–¢–µ—Å—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "test@example.com", generate_password_hash("password"), "RUB", "light"))
    
    user_id = conn.lastrowid
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    categories = [
        ("–ü—Ä–æ–¥—É–∫—Ç—ã", 15000, "fixed"),
        ("–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", 8000, "fixed"),
        ("–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", 10, "percent"),
        ("–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ", 5000, "fixed"),
    ]
    
    for name, value, limit_type in categories:
        conn.execute("""
        INSERT INTO categories (user_id, name, value, limit_type) 
        VALUES (?, ?, ?, ?)
        """, (user_id, name, value, limit_type))
    
    # –°–æ–∑–¥–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–æ—Ö–æ–¥–∞
    conn.execute("""
    INSERT INTO income_sources (user_id, name, is_default) 
    VALUES (?, ?, ?)
    """, (user_id, "–û—Å–Ω–æ–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞", 1))
    
    conn.commit()
    conn.close()
    
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
    print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: test@example.com / password")


def run():
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ."""
    print("üöÄ –ó–∞–ø—É—Å–∫ CrystalBudget...")
    os.system("python3 wsgi.py")


def show_help():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É."""
    print("""
üéØ CrystalBudget Management Utility

–ö–æ–º–∞–Ω–¥—ã:
  init-db    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
  migrate    –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏  
  seed       –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
  run        –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  help       –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
  python3 manage.py init-db
  python3 manage.py migrate
  python3 manage.py seed
  python3 manage.py run
  
–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:
  BUDGET_DB=/path/to/budget.db
  SECRET_KEY=your-secret-key
  FLASK_ENV=development|production
  PORT=5000
    """)


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    if len(sys.argv) < 2:
        show_help()
        return
    
    command = sys.argv[1]
    
    if command == "init-db":
        init_db()
    elif command == "migrate":
        migrate()
    elif command == "seed":
        seed()
    elif command == "run":
        run()
    elif command == "help":
        show_help()
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        show_help()


if __name__ == "__main__":
    main()
#!/usr/bin/env bash
set -euo pipefail

GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${BLUE}–§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞...${NC}"

# 1. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è crystall –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if ! id crystall &>/dev/null; then
    echo "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è crystall..."
    useradd -r -m -s /bin/bash crystall
    echo -e "${GREEN}‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å crystall —Å–æ–∑–¥–∞–Ω${NC}"
else
    echo -e "${GREEN}‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å crystall —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
fi

# 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
chown -R crystall:crystall /data/crystall-budget
echo -e "${GREEN}‚úì –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã${NC}"

cd /data/crystall-budget

# 3. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –µ—Å–ª–∏ –µ—Å—Ç—å
pkill -f "node.*server.js" || true
pkill -f "next" || true
echo -e "${GREEN}‚úì –°—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"

# 4. –°–æ–±–∏—Ä–∞–µ–º API (–ø—Ä–æ—â–µ)
cd /data/crystall-budget/api
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ API..."
if [[ ! -f .env ]]; then
    cp .env.example .env
    sed -i "s/user:password/crystall:adminDII/g" .env
    echo -e "${GREEN}‚úì .env —Å–æ–∑–¥–∞–Ω${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ API –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è
echo "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API..."
sudo -u crystall timeout 5 node server.js || echo "API —Ç–µ—Å—Ç –ø—Ä–æ—à–µ–ª"

# 5. –£–ø—Ä–æ—â–∞–µ–º Web –±–µ–∑ —Å–±–æ—Ä–∫–∏
cd /data/crystall-budget/web
echo "–£–ø—Ä–æ—â–µ–Ω–∏–µ Web –±–µ–∑ —Å–±–æ—Ä–∫–∏..."

# –ü—Ä–æ—Å—Ç–µ–π—à–∏–π Next.js –∫–æ–Ω—Ñ–∏–≥ –¥–ª—è dev —Ä–µ–∂–∏–º–∞
cat > next.config.js << 'EOF'
/** @type {import('next').NextConfig} */
const nextConfig = {};
module.exports = nextConfig;
EOF

# –£–±–∏—Ä–∞–µ–º TypeScript - –¥–µ–ª–∞–µ–º –≤—Å–µ JS
rm -f tsconfig.json next-env.d.ts

# –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º .tsx –≤ .js
mv app/layout.tsx app/layout.js 2>/dev/null || true
mv app/page.tsx app/page.js 2>/dev/null || true
mv app/auth/signin/page.tsx app/auth/signin/page.js 2>/dev/null || true
mv app/auth/signup/page.tsx app/auth/signup/page.js 2>/dev/null || true

# –£–ø—Ä–æ—â–∞–µ–º layout.js
cat > app/layout.js << 'EOF'
import './globals.css';

export const metadata = {
  title: 'CrystallBudget',
  description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–º–µ–π–Ω—ã–º –±—é–¥–∂–µ—Ç–æ–º',
};

export default function RootLayout({ children }) {
  return (
    <html lang="ru">
      <body>{children}</body>
    </html>
  );
}
EOF

# –£–ø—Ä–æ—â–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É  
cat > app/page.js << 'EOF'
'use client';
import { useEffect, useState } from 'react';

export default function Home() {
  const [status, setStatus] = useState('loading');

  useEffect(() => {
    fetch('/api/health')
      .then(r => r.ok ? r.json() : Promise.reject())
      .then(() => setStatus('ok'))
      .catch(() => setStatus('fail'));
  }, []);

  return (
    <div className="container">
      <h1 className="title">üíé CrystallBudget</h1>
      
      {status === 'loading' && (
        <div className="card">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      )}
      
      {status === 'ok' && (
        <div className="card">
          <p>API —Ä–∞–±–æ—Ç–∞–µ—Ç!</p>
          <div style={{marginTop: '1rem'}}>
            <a href="/auth/signin" className="btn btn-primary" style={{marginRight: '0.5rem'}}>–í–æ–π—Ç–∏</a>
            <a href="/auth/signup" className="btn btn-secondary">–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç</a>
          </div>
        </div>
      )}
      
      {status === 'fail' && (
        <div className="alert alert-error">
          API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –±—ç–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 4000.
        </div>
      )}
    </div>
  );
}
EOF

# –£–ø—Ä–æ—â–∞–µ–º package.json - —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
cat > package.json << 'EOF'
{
  "name": "crystall-web",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "dev": "next dev -p 3000",
    "start": "next start -p 3000"
  },
  "dependencies": {
    "next": "14.2.0",
    "react": "18.3.1",
    "react-dom": "18.3.1"
  }
}
EOF

# –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
rm -rf node_modules package-lock.json .next
sudo -u crystall npm install --no-audit --no-fund

echo -e "${GREEN}‚úì Web –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è dev —Ä–µ–∂–∏–º–∞${NC}"

# 6. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è dev —Ä–µ–∂–∏–º–∞
cat > /etc/systemd/system/crystall-api.service << 'EOF'
[Unit]
Description=Crystall API
After=network.target postgresql-16.service
Wants=network-online.target

[Service]
Type=simple
User=crystall
Group=crystall
WorkingDirectory=/data/crystall-budget/api
ExecStart=/usr/bin/node server.js
EnvironmentFile=/data/crystall-budget/api/.env
Restart=always
RestartSec=5
RuntimeMaxMemory=128M

[Install]
WantedBy=multi-user.target
EOF

cat > /etc/systemd/system/crystall-web.service << 'EOF'
[Unit]
Description=Crystall Budget Next.js Web
After=network.target
Wants=network-online.target

[Service]
Type=simple
User=crystall
Group=crystall
WorkingDirectory=/data/crystall-budget/web
ExecStart=/usr/bin/npx next dev -p 3000
Environment=NODE_ENV=development
Restart=always
RestartSec=5
RuntimeMaxMemory=128M

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
echo -e "${GREEN}‚úì Systemd —Å–µ—Ä–≤–∏—Å—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è dev —Ä–µ–∂–∏–º–∞${NC}"

# 7. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Caddy
EXTERNAL_IP=$(curl -s ifconfig.me 2>/dev/null || echo "161-35-31-38")
sed "s/YOUR-IP/${EXTERNAL_IP//./-}/g" Caddyfile > /etc/caddy/Caddyfile
systemctl reload caddy 2>/dev/null || systemctl restart caddy

echo -e "${GREEN}‚úì Caddy –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"

echo
echo -e "${GREEN}=========================================="
echo "         –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ (DEV —Ä–µ–∂–∏–º)!"
echo "==========================================${NC}"
echo
echo "–ó–∞–ø—É—Å–∫:"
echo "  sudo ./start.sh"
echo
echo "URL: https://crystallbudget.${EXTERNAL_IP//./-}.sslip.io"
echo "API: curl http://localhost:4000/api/health"
echo "Web: curl http://localhost:3000"
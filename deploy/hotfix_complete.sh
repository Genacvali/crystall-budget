#!/bin/bash
set -e

echo "üöë COMPLETE HOTFIX: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º production"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
if [ "$EUID" -ne 0 ]; then
    echo "‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∫–∞–∫ root –∏–ª–∏ —Å sudo"
    exit 1
fi

APP_DIR="/opt/crystalbudget/crystall-budget"
SERVICE_NAME="crystalbudget"

echo "üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞..."
systemctl stop $SERVICE_NAME

echo "üîÑ –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
cd $APP_DIR

echo "üîÑ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ auth routes (sqlite3.Row.get –æ—à–∏–±–∫–∞)..."
# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º auth/routes.py
if [ -f "app/blueprints/auth/routes.py" ]; then
    # –°–æ–∑–¥–∞–µ–º backup
    cp app/blueprints/auth/routes.py app/blueprints/auth/routes.py.backup
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    sed -i "s/user\.get('theme', 'light')/user['theme'] if 'theme' in user.keys() else 'light'/g" app/blueprints/auth/routes.py
    sed -i "s/user\.get('default_currency', 'RUB')/user['default_currency'] if 'default_currency' in user.keys() else 'RUB'/g" app/blueprints/auth/routes.py
    
    echo "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω auth/routes.py"
else
    echo "‚ùå –§–∞–π–ª app/blueprints/auth/routes.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞..."
cat > /etc/systemd/system/crystalbudget.service << 'EOF'
[Unit]
Description=CrystalBudget Personal Finance Application
After=network.target

[Service]
Type=notify
User=crystal
Group=crystal
WorkingDirectory=/opt/crystalbudget/crystall-budget

Environment="FLASK_ENV=production"
Environment="LOG_LEVEL=INFO"
Environment="SECRET_KEY=0xm5hy67Txo5taHWK_CuWy72wSDFkgN0f9Rc2L7c_ZhdYFMJTYu8IoXjoW6QQ0x"
Environment="BUDGET_DB=/var/lib/crystalbudget/budget.db"
Environment="HTTPS_MODE=true"
Environment="PYTHONPATH=/opt/crystalbudget/crystall-budget"

ExecStart=/opt/crystalbudget/venv/bin/gunicorn \
  --chdir /opt/crystalbudget/crystall-budget \
  --workers=3 --threads=2 --timeout=60 \
  --bind 127.0.0.1:5000 \
  --enable-stdio-inheritance \
  wsgi:app

Restart=always
RestartSec=5

NoNewPrivileges=yes
PrivateTmp=yes
ProtectSystem=strict
ReadWritePaths=/var/lib/crystalbudget /opt/crystalbudget/crystall-budget/logs

[Install]
WantedBy=multi-user.target
EOF

echo "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ systemd..."
systemctl daemon-reload

echo "üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ wsgi.py..."
if [ ! -f "wsgi.py" ]; then
    cat > wsgi.py << 'EOF'
"""WSGI entry point for Crystal Budget application."""

import os
from app import create_app

# Create application instance
app = create_app()

if __name__ == "__main__":
    app.run(
        host="0.0.0.0", 
        port=int(os.environ.get("PORT", 5000)), 
        debug=os.environ.get("FLASK_ENV") == "development"
    )
EOF
    chmod +x wsgi.py
fi

echo "üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
chown -R crystal:crystal /opt/crystalbudget/crystall-budget
chmod +x wsgi.py

echo "üîÑ –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞..."
sudo -u crystal python3 -c "
import sys
sys.path.insert(0, '/opt/crystalbudget/crystall-budget')
from app import create_app
app = create_app('production')
print('‚úÖ –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç')
print('‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç')
" || {
    echo "‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    exit 1
}

echo "üîÑ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞..."
systemctl start $SERVICE_NAME

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
echo "üîÑ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞..."
sleep 5

if systemctl is-active --quiet $SERVICE_NAME; then
    echo "‚úÖ –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    
    # –¢–µ—Å—Ç HTTP
    echo "üîÑ –¢–µ—Å—Ç HTTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è..."
    sleep 2
    if curl -s -f http://localhost:5000 > /dev/null; then
        echo "‚úÖ HTTP —Ç–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω"
    else
        echo "‚ö†Ô∏è  HTTP —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª, –Ω–æ —Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    echo "‚úÖ COMPLETE HOTFIX –ø—Ä–∏–º–µ–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    
else
    echo "‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"
    echo "üîç –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
    journalctl -u $SERVICE_NAME --no-pager -l --since "2 minutes ago"
    exit 1
fi

echo ""
echo "üéâ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!"
echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞:"
systemctl status $SERVICE_NAME --no-pager
echo ""
echo "üìù –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  journalctl -u $SERVICE_NAME -f    # –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
echo "  systemctl restart $SERVICE_NAME   # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫"
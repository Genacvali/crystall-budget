#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —Ç–∞–±–ª–∏—Ü –≤ CrystalBudget
–ó–∞–ø—É—Å–∫–∞—Ç—å —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sqlite3
import sys

def get_db_path():
    """–ü–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."""
    return os.environ.get("BUDGET_DB", "budget.db")

def ensure_new_tables():
    """–°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç (–º–∏–≥—Ä–∞—Ü–∏—è)."""
    db_path = get_db_path()
    
    print(f"üîÑ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {db_path}")
    
    if not os.path.exists(db_path):
        print(f"‚ùå –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω: {db_path}")
        sys.exit(1)
    
    try:
        conn = sqlite3.connect(db_path)
        conn.row_factory = sqlite3.Row
        conn.execute("PRAGMA foreign_keys = ON")
        
        tables_created = 0
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
        cursor = conn.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='savings_goals'")
        if not cursor.fetchone():
            # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è —Ü–µ–ª–µ–π –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π
            conn.execute("""
            CREATE TABLE savings_goals (
              id INTEGER PRIMARY KEY AUTOINCREMENT,
              user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
              name TEXT NOT NULL,
              target_amount DECIMAL(10,2) NOT NULL,
              current_amount DECIMAL(10,2) DEFAULT 0,
              target_date DATE,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              completed_at TIMESTAMP NULL,
              description TEXT
            )
            """)
            print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞: savings_goals")
            tables_created += 1
        else:
            print("‚è≠Ô∏è  –¢–∞–±–ª–∏—Ü–∞ savings_goals —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        cursor = conn.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='shared_budgets'")
        if not cursor.fetchone():
            # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è shared budgets
            conn.execute("""
            CREATE TABLE shared_budgets (
              id INTEGER PRIMARY KEY AUTOINCREMENT,
              name TEXT NOT NULL,
              creator_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
              invite_code TEXT UNIQUE NOT NULL,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
            """)
            print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞: shared_budgets")
            tables_created += 1
        else:
            print("‚è≠Ô∏è  –¢–∞–±–ª–∏—Ü–∞ shared_budgets —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        cursor = conn.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='shared_budget_members'")
        if not cursor.fetchone():
            # –£—á–∞—Å—Ç–Ω–∏–∫–∏ shared budgets
            conn.execute("""
            CREATE TABLE shared_budget_members (
              id INTEGER PRIMARY KEY AUTOINCREMENT,
              shared_budget_id INTEGER NOT NULL REFERENCES shared_budgets(id) ON DELETE CASCADE,
              user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
              role TEXT DEFAULT 'member',
              joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              UNIQUE(shared_budget_id, user_id)
            )
            """)
            print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞: shared_budget_members")
            tables_created += 1
        else:
            print("‚è≠Ô∏è  –¢–∞–±–ª–∏—Ü–∞ shared_budget_members —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        cursor = conn.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='exchange_rates'")
        if not cursor.fetchone():
            # –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç (–¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è)
            conn.execute("""
            CREATE TABLE exchange_rates (
              id INTEGER PRIMARY KEY AUTOINCREMENT,
              from_currency TEXT NOT NULL,
              to_currency TEXT NOT NULL,
              rate DECIMAL(10,6) NOT NULL,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              UNIQUE(from_currency, to_currency)
            )
            """)
            print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞: exchange_rates")
            tables_created += 1
        else:
            print("‚è≠Ô∏è  –¢–∞–±–ª–∏—Ü–∞ exchange_rates —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
        conn.commit()
        conn.close()
        
        if tables_created > 0:
            print(f"üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! –°–æ–∑–¥–∞–Ω–æ —Ç–∞–±–ª–∏—Ü: {tables_created}")
        else:
            print("‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –º–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        if 'conn' in locals():
            conn.close()
        sys.exit(1)

if __name__ == "__main__":
    ensure_new_tables()